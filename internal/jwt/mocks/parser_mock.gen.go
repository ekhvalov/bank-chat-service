// Code generated by MockGen. DO NOT EDIT.
// Source: parser.go
//
// Generated by this command:
//
//	mockgen -source=parser.go -destination=mocks/parser_mock.gen.go -typed -package=jwtmocks
//
// Package jwtmocks is a generated GoMock package.
package jwtmocks

import (
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt/v5"
	gomock "go.uber.org/mock/gomock"
)

// MockKeyFuncProvider is a mock of KeyFuncProvider interface.
type MockKeyFuncProvider struct {
	ctrl     *gomock.Controller
	recorder *MockKeyFuncProviderMockRecorder
}

// MockKeyFuncProviderMockRecorder is the mock recorder for MockKeyFuncProvider.
type MockKeyFuncProviderMockRecorder struct {
	mock *MockKeyFuncProvider
}

// NewMockKeyFuncProvider creates a new mock instance.
func NewMockKeyFuncProvider(ctrl *gomock.Controller) *MockKeyFuncProvider {
	mock := &MockKeyFuncProvider{ctrl: ctrl}
	mock.recorder = &MockKeyFuncProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyFuncProvider) EXPECT() *MockKeyFuncProviderMockRecorder {
	return m.recorder
}

// Keyfunc mocks base method.
func (m *MockKeyFuncProvider) Keyfunc(token *jwt.Token) (any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Keyfunc", token)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Keyfunc indicates an expected call of Keyfunc.
func (mr *MockKeyFuncProviderMockRecorder) Keyfunc(token any) *KeyFuncProviderKeyfuncCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Keyfunc", reflect.TypeOf((*MockKeyFuncProvider)(nil).Keyfunc), token)
	return &KeyFuncProviderKeyfuncCall{Call: call}
}

// KeyFuncProviderKeyfuncCall wrap *gomock.Call
type KeyFuncProviderKeyfuncCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *KeyFuncProviderKeyfuncCall) Return(arg0 any, arg1 error) *KeyFuncProviderKeyfuncCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *KeyFuncProviderKeyfuncCall) Do(f func(*jwt.Token) (any, error)) *KeyFuncProviderKeyfuncCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *KeyFuncProviderKeyfuncCall) DoAndReturn(f func(*jwt.Token) (any, error)) *KeyFuncProviderKeyfuncCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
