// Code generated by options-gen. DO NOT EDIT.
package servermanager

import (
	fmt461e464ebed9 "fmt"

	managerv1 "github.com/ekhvalov/bank-chat-service/internal/server-manager/v1"
	"github.com/getkin/kin-openapi/openapi3"
	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	v1Swagger *openapi3.T,
	v1Handlers managerv1.Handlers,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from field tag (if present)

	o.v1Swagger = v1Swagger
	o.v1Handlers = v1Handlers

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("v1Swagger", _validate_Options_v1Swagger(o)))
	errs.Add(errors461e464ebed9.NewValidationError("v1Handlers", _validate_Options_v1Handlers(o)))
	return errs.AsError()
}

func _validate_Options_v1Swagger(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.v1Swagger, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `v1Swagger` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_v1Handlers(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.v1Handlers, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `v1Handlers` did not pass the test: %w", err)
	}
	return nil
}
